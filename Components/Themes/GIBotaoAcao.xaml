<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:gi="clr-namespace:NL.GI.ComponentesWPF.Cliente">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NL.GI.ComponentesWPF.Cliente;component/Themes/System.Windows.xaml" />
        <ResourceDictionary Source="/NL.GI.ComponentesWPF.Cliente;component/Themes/Telerik.Windows.Controls.xaml" />
        <ResourceDictionary Source="/NL.GI.ComponentesWPF.Cliente;component/Themes/Telerik.Windows.Controls.Input.xaml" />
        <ResourceDictionary Source="/NL.GI.ComponentesWPF.Cliente;component/Themes/Telerik.Windows.Controls.GridView.xaml" />
        <ResourceDictionary Source="/NL.GI.ComponentesWPF.Cliente;component/Themes/GIBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type gi:GIBotaoAcao}" BasedOn="{StaticResource RadButtonStyle}" x:Key="GIBotaoAcaoStyle">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="110" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="1"/>
        
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type gi:GIBotaoAcao}">
                    <Grid SnapsToDevicePixels="True" x:Name="mainGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="Disabled">
                                    <Storyboard>                                            
                                        <DoubleAnimation Duration="0"  Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0.5" />
                                        <DoubleAnimation Duration="0"  Storyboard.TargetName="img" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <DoubleAnimation Duration="0"  Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"  Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                            
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Border x:Name="Border" 
                                BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Background="{TemplateBinding Background}" />
                        
                        <Grid x:Name="gridPrincipal">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" x:Name="columnImage" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Border Margin="5 0 0 0" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid>
                                    
                                    <!--<Path x:Name="FundoImagem" Grid.Column="0" Data="F1M7291.2998,7291.5811C7241.3118,7341.5691,7160.2648,7341.5661,7110.2798,7291.5811C7060.2918,7241.5941,7060.2918,7160.5491,7110.2798,7110.5621C7160.2648,7060.5751,7241.3118,7060.5741,7291.2988,7110.5611C7341.2848,7160.5481,7341.2848,7241.5961,7291.2998,7291.5811" 
                                          Fill="#FF949494" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="False" StrokeThickness="0" Width="20" Height="20" RenderTransformOrigin="0.5,0.5"/>-->

                                    <Image  Name="img" MaxHeight="23" MaxWidth="23" Source="{TemplateBinding Image}" />
                                </Grid>
                                
                            </Border>
                            
                            <ContentPresenter Grid.Column="1" x:Name="content" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="Left" 
                                              Margin="5 0 0 0" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="Center" />
                        </Grid>
                        
                        <Border x:Name="CommonStatesWrapper">
                            
                            <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Collapsed">
                                <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>       
                    
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.31"/>
                                        <GradientStop Color="#FFDADADA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger> 
                        
                        <Trigger Property="IsPressed" Value="True">
                            
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" Offset="0.31"/>
                                    <GradientStop Color="#FFDADADA" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF919191" />
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFCC082B" />
                        </Trigger>
                        
                        <!--Trigger Property="Action" Value="Atualizar">
                            <Setter Property="Width" TargetName="columnImage" Value="0" />
                        </-->
                        
                        
                        <!-- Mudança da imagem quando der mouseover/pressed -->

                        <DataTrigger Binding="{Binding ElementName=mainGrid, Path=IsMouseOver}" Value="True" >
                            <Setter Property="Source" TargetName="img" Value="{Binding ImageOver, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                            <!--<Setter Property="Fill" TargetName="FundoImagem" Value="#FF737373" />-->
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding ElementName=mainGrid, Path=IsPressed}" Value="True" >
                            <Setter Property="Source" TargetName="img" Value="{Binding ImagePressed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                            <!--<Setter Property="Fill" TargetName="FundoImagem" Value="#FF949494" />-->
                        </DataTrigger>

                        <!--<DataTrigger Binding="{Binding ElementName=mainGrid, Path=IsMouseOver}" Value="True" >
                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=mainGrid, Path=IsPressed}" Value="True" >
                            
                        </DataTrigger>-->

                    </ControlTemplate.Triggers>                   
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>